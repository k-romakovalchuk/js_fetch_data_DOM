{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","URLdetails","request","fetch","then","response","ok","setTimeout","Error","status","statusText","json","getPhones","getPhonesDetails","arrayOfIds","arr","map","phoneId","result","table","document","createElement","i","arrPhonesId","el","insertAdjacentHTML","name","id","body","append","resolve","catch"],"mappings":";AAAA,aAEA,IAAMA,EAAN,0EAEMC,EAAN,sEAGMC,EAAU,WACPC,OAAAA,MAASH,GAAAA,OAAAA,IACbI,KAAK,SAAAC,GAOGA,OANFA,EAASC,IACZC,WAAW,WACHC,MAAAA,MAASH,GAAAA,OAAAA,EAASI,OAAYJ,OAAAA,OAAAA,EAASK,cAC5C,KAGEL,EAASM,UAIhBC,EAAY,WAAMV,OAAAA,KAExB,SAASW,EAAiBC,GAYjBC,OAXKD,EAAWE,IAAI,SAAAC,GAClBd,OAAAA,MAASF,GAAAA,OAAAA,EAAcgB,KAAAA,OAAAA,EAAvB,UACJb,KAAK,SAAAC,GACA,IAACA,EAASC,GACNE,MAAAA,MAASH,GAAAA,OAAAA,EAASI,OAAYJ,OAAAA,OAAAA,EAASK,aAGxCL,OAAAA,EAASM,WAOxBC,IACGR,KAAK,SAAAc,GACEC,IAAAA,EAAQC,SAASC,cAAc,SACjCC,EAAI,EACFC,EAAcL,EAAOF,IAAI,SAAAQ,GAQtBA,OAPPL,EAAMM,mBAAmB,YAEiBH,iEAAAA,OAAAA,IACAE,yDAAAA,OAAAA,EAAGE,KAH7C,iCAOOF,EAAGG,KAGZP,SAASQ,KAAKC,OAAOV,GAErBN,EAAiBU,GACdnB,KAAK,SAAA0B,GACGA,OAAAA,MAIZC","file":"main.43ea4062.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = `https://mate-academy.github.io\n/phone-catalogue-static/api/phones.json`;\nconst URLdetails = `https://mate-academy.github.\nio/phone-catalogue-static/api/phones/`;\n\nconst request = () => {\n  return fetch(`${BASE_URL}`)\n    .then(response => {\n      if (!response.ok) {\n        setTimeout(() => {\n          throw Error(`${response.status} - ${response.statusText}`);\n        }, 5000);\n      }\n\n      return response.json();\n    });\n};\n\nconst getPhones = () => request();\n\nfunction getPhonesDetails(arrayOfIds) {\n  const arr = arrayOfIds.map(phoneId => {\n    return fetch(`${URLdetails}/${phoneId}.json`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(`${response.status} - ${response.statusText}`);\n        }\n\n        return response.json();\n      });\n  });\n\n  return arr;\n}\n\ngetPhones()\n  .then(result => {\n    const table = document.createElement('table');\n    let i = 1;\n    const arrPhonesId = result.map(el => {\n      table.insertAdjacentHTML('beforeend', `\n        <tr>\n          <td style=\"border: 1px solid blue;\">${i++}</td>\n          <td style=\"border: 1px solid blue;\">${el.name}</td>\n        </tr>\n      `);\n\n      return el.id;\n    });\n\n    document.body.append(table);\n\n    getPhonesDetails(arrPhonesId)\n      .then(resolve => {\n        return resolve;\n      });\n  })\n\n  .catch();\n"]}